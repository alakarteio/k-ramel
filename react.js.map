{"version":3,"file":"react.js","sources":["src/react/getWrappedDisplayName.js","src/react/inject.jsx","src/react/provider.jsx"],"sourcesContent":["export default Component => (\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n)\n","import React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nexport default injectFunction => WrappedComponent => class extends Component {\n  static displayName = `inject(${getWrappedDisplayName(WrappedComponent)}`\n\n  static contextTypes = {\n    kStore: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      injectedProps: {},\n    }\n  }\n\n  componentWillMount() {\n    // subscribe\n    this.unsubscribe = this.context.kStore.subscribe(() => {\n      this.inject()\n    })\n\n    // run in once\n    this.inject()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.readStore(nextProps)()\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe()\n  }\n\n  inject = () => {\n    this.setState(state => ({\n      ...state,\n      injectedProps: injectFunction(this.context.kStore, this.props),\n    }))\n  }\n\n  render() {\n    return (\n      <WrappedComponent\n        /* this is parent props */\n        {...this.props}\n        /* this is injected props from hoc */\n        {...this.state.injectedProps}\n      />\n    )\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nimport React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\n// inspired from mobx-react/Provider :\nexport default store => WrappedComponent => class extends Component {\n  static displayName = `provider(${getWrappedDisplayName(WrappedComponent)})`\n\n  static childContextTypes = {\n    kStore: () => null, // this is to avoid importing prop-types\n  }\n\n  getChildContext() {\n    return { kStore: store }\n  }\n\n  render() {\n    return <WrappedComponent {...this.props} />\n  }\n}\n"],"names":["Component","displayName","name","constructor","props","context","inject","setState","state","injectFunction","_this","kStore","unsubscribe","this","subscribe","nextProps","readStore","React","WrappedComponent","injectedProps","getWrappedDisplayName","contextTypes","store","childContextTypes"],"mappings":"kSACEA,EAAUC,aACPD,EAAUE,MACTF,EAAUG,aAAeH,EAAUG,YAAYD,MAChD,+/BCD4B,sDAOnBE,EAAOC,4EACXD,EAAOC,aAyBfC,OAAS,aACFC,SAAS,wBACTC,iBACYC,EAAeC,EAAKL,QAAQM,OAAQD,EAAKN,cA1BrDI,yGAOAI,YAAcC,KAAKR,QAAQM,OAAOG,UAAU,aAC1CR,gBAIFA,2DAGmBS,QACnBC,UAAUD,yDAIVH,sDAYHK,gBAACC,OAEKL,KAAKT,MAELS,KAAKL,MAAMW,uBA9C4CnB,eAC1DC,sBAAwBmB,EAAsBF,KAE9CG,qBACG,kBAAM,yCCFM,iNAQXV,OAAQW,2CAIVL,gBAACC,EAAqBL,KAAKT,cAZoBJ,eACjDC,wBAA0BmB,EAAsBF,SAEhDK,0BACG,kBAAM"}