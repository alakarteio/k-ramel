{"version":3,"file":"index.umd.js","sources":["../src/http.js"],"sourcesContent":["const dispatchFactory = store => name => method =>\n  (event, payload, status, fetch) => store.dispatch({\n    type: `@@http/${name}>${method}>${event}`,\n    payload,\n    status,\n    fetch,\n  })\n\nconst getDriver = (store) => {\n  const innerHeaders = {}\n  let innerOptions = {}\n\n  const driver = (name) => {\n    const ownFetch = async (url, options = {}, ...args) => {\n      // options\n      const { method = 'GET' } = options\n      const appliedHeaders = { ...innerOptions.headers, ...innerHeaders, ...options.headers }\n      const appliedOptions = { ...innerOptions, ...options, headers: appliedHeaders }\n\n      // dispatcher\n      const dispatch = dispatchFactory(store)(name)(method)\n\n      // request\n      let data\n      let raw\n      const fetchArgs = [url, appliedOptions, ...args]\n      dispatch('STARTED', undefined, undefined, fetchArgs)\n      try {\n        raw = await (global || window).fetch(...fetchArgs)\n        data = raw\n\n        if (raw.headers && raw.headers.get('Content-Type') && raw.headers.get('Content-Type').includes('json')) {\n          data = await raw.json()\n        }\n      } catch (ex) {\n        dispatch('FAILED', ex, (raw || {}).status, fetchArgs)\n        return ex\n      }\n\n      const { status } = raw\n      if (status >= 400 || status < 200) {\n        dispatch('FAILED', data, status)\n      } else {\n        dispatch('ENDED', data, status)\n      }\n\n      return data\n    }\n\n    // methods helpers\n    ['GET', 'POST', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'CONNECT']\n      .forEach((method) => {\n        ownFetch[method.toLowerCase()] = (url, data, options = {}) => {\n          const { headers = {} } = options\n          let appliedOptions = options\n\n          // attach data as JSON object\n          if (data && ['object', 'array'].includes(typeof data)) {\n            if (!headers['Content-Type']) appliedOptions = { ...appliedOptions, headers: { ...headers, 'Content-Type': 'application/json' } }\n\n            appliedOptions = { ...appliedOptions, body: JSON.stringify(data) }\n          }\n\n          // set method\n          appliedOptions = { ...appliedOptions, method }\n\n          return ownFetch(url, appliedOptions)\n        }\n      })\n\n    return ownFetch\n  }\n\n  // custom helpers\n  driver.setAuthorization = (authorization) => { innerHeaders.Authorization = authorization }\n  driver.setOptions = (options) => { innerOptions = options }\n  driver.setCredentials = (credentials) => { innerOptions = { ...innerOptions, credentials } }\n\n  return driver\n}\n\nexport default () => ({\n  getDriver,\n})\n"],"names":["dispatchFactory","event","payload","status","fetch","store","dispatch","type","name","method","getDriver","innerHeaders","innerOptions","driver","ownFetch","url","args","options","appliedHeaders","headers","appliedOptions","data","raw","fetchArgs","undefined","global","window","get","includes","json","forEach","toLowerCase","body","JSON","stringify","setAuthorization","authorization","Authorization","setOptions","setCredentials","credentials"],"mappings":"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"}