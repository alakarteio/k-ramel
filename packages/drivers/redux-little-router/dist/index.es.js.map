{"version":3,"file":"index.es.js","sources":["../src/reduxLittleRouter.js"],"sourcesContent":["import { routerForBrowser, push, replace, go, goBack, goForward, block, unblock } from 'redux-little-router'\nimport { compose, applyMiddleware } from 'redux'\n\nconst getParentResultParam = (result, key) => {\n  if (!result) return undefined\n  if (result[key]) return result[key]\n  return getParentResultParam(result.parent, key)\n}\n\nconst isParentResultParam = (result, key, value) => {\n  if (!result) return false\n  if (result[key] === value) return true\n  return isParentResultParam(result.parent, key, value)\n}\n\nconst isRouterImpl = ({ reducer, middleware, enhancer }) => reducer && enhancer && middleware\n\nexport default (config, selector) => {\n  const { reducer, middleware, enhancer } =\n    isRouterImpl(config) ? config : routerForBrowser({ routes: config })\n\n  const driver = ({ dispatch, getState }) => {\n    const get = () => selector(getState())\n    const getResult = () => get().result\n    return ({\n      /* actions */\n      push: path => dispatch(push(path)),\n      replace: path => dispatch(replace(path)),\n      go: nbLocations => dispatch(go(nbLocations)),\n      goBack: () => dispatch(goBack()),\n      goForward: () => dispatch(goForward()),\n      block: callback => dispatch(block(callback)),\n      unblock: () => dispatch(unblock()),\n      /* route selectors */\n      get,\n      getRouteParam: key => get().params && get().params[key],\n      getQueryParam: key => get().query && get().query[key],\n      getResultParam: key => getResult() && getResult()[key],\n      getParentResultParam: key => getParentResultParam(getResult(), key),\n      isRoute: route => get().route === route,\n      isParentResultParam: (key, value) => isParentResultParam(getResult(), key, value),\n    })\n  }\n\n  driver.getReducer = () => reducer\n  driver.getEnhancer = () => compose(enhancer, applyMiddleware(middleware))\n\n  return driver\n}\n"],"names":["getParentResultParam","result","key","parent","isParentResultParam","value","isRouterImpl","reducer","middleware","enhancer","config","selector","routerForBrowser","routes","driver","dispatch","getState","get","getResult","push","path","replace","go","nbLocations","goBack","goForward","block","callback","unblock","params","query","route","getReducer","getEnhancer","compose","applyMiddleware"],"mappings":"4IAGA,IAAMA,sBAAuB,SAAvBA,EAAwBC,EAAQC,MAC/BD,SACDA,EAAOC,GAAaD,EAAOC,GACxBF,EAAqBC,EAAOE,OAAQD,IAGvCE,qBAAsB,SAAtBA,EAAuBH,EAAQC,EAAKG,WACnCJ,IACDA,EAAOC,KAASG,GACbD,EAAoBH,EAAOE,OAAQD,EAAKG,KAG3CC,aAAe,gBAAGC,IAAAA,QAASC,IAAAA,WAAYC,IAAAA,gBAAeF,GAAWE,GAAYD,8BAEnEE,EAAQC,SAEpBL,aAAaI,GAAUA,EAASE,kBAAmBC,OAAQH,IADrDH,IAAAA,QAASC,IAAAA,WAAYC,IAAAA,SAGvBK,EAAS,gBAAGC,IAAAA,SAAUC,IAAAA,SACpBC,EAAM,kBAAMN,EAASK,MACrBE,EAAY,kBAAMD,IAAMhB,oBAGtB,mBAAQc,EAASI,KAAKC,aACnB,mBAAQL,EAASM,QAAQD,QAC9B,mBAAeL,EAASO,GAAGC,YACvB,kBAAMR,EAASS,qBACZ,kBAAMT,EAASU,oBACnB,mBAAYV,EAASW,MAAMC,aACzB,kBAAMZ,EAASa,gCAGT,mBAAOX,IAAMY,QAAUZ,IAAMY,OAAO3B,kBACpC,mBAAOe,IAAMa,OAASb,IAAMa,MAAM5B,mBACjC,mBAAOgB,KAAeA,IAAYhB,yBAC5B,mBAAOF,sBAAqBkB,IAAahB,YACtD,mBAASe,IAAMc,QAAUA,uBACb,SAAC7B,EAAKG,UAAUD,qBAAoBc,IAAahB,EAAKG,eAIxE2B,WAAa,kBAAMzB,KACnB0B,YAAc,kBAAMC,QAAQzB,EAAU0B,gBAAgB3B,KAEtDM"}