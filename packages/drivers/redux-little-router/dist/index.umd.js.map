{"version":3,"file":"index.umd.js","sources":["../src/reduxLittleRouter.js"],"sourcesContent":["import { routerForBrowser, push, replace, go, goBack, goForward, block, unblock } from 'redux-little-router'\nimport { compose, applyMiddleware } from 'redux'\n\nconst getParentResultParam = (result, key) => {\n  if (!result) return undefined\n  if (result[key]) return result[key]\n  return getParentResultParam(result.parent, key)\n}\n\nconst isParentResultParam = (result, key, value) => {\n  if (!result) return false\n  if (result[key] === value) return true\n  return isParentResultParam(result.parent, key, value)\n}\n\nconst isRouterImpl = ({ reducer, middleware, enhancer }) => reducer && enhancer && middleware\n\nexport default (config, selector) => {\n  const { reducer, middleware, enhancer } =\n    isRouterImpl(config) ? config : routerForBrowser({ routes: config })\n\n  const driver = ({ dispatch, getState }) => {\n    const get = () => selector(getState())\n    const getResult = () => get().result\n    return ({\n      /* actions */\n      push: path => dispatch(push(path)),\n      replace: path => dispatch(replace(path)),\n      go: nbLocations => dispatch(go(nbLocations)),\n      goBack: () => dispatch(goBack()),\n      goForward: () => dispatch(goForward()),\n      block: callback => dispatch(block(callback)),\n      unblock: () => dispatch(unblock()),\n      /* route selectors */\n      get,\n      getRouteParam: key => get().params && get().params[key],\n      getQueryParam: key => get().query && get().query[key],\n      getResultParam: key => getResult() && getResult()[key],\n      getParentResultParam: key => getParentResultParam(getResult(), key),\n      isRoute: route => get().route === route,\n      isParentResultParam: (key, value) => isParentResultParam(getResult(), key, value),\n    })\n  }\n\n  driver.getReducer = () => reducer\n  driver.getEnhancer = () => compose(enhancer, applyMiddleware(middleware))\n\n  return driver\n}\n"],"names":["getParentResultParam","result","key","undefined","parent","isParentResultParam","value","isRouterImpl","reducer","middleware","enhancer","config","selector","routerForBrowser","routes","driver","dispatch","getState","get","getResult","push","path","replace","go","nbLocations","goBack","goForward","block","callback","unblock","params","query","route","getReducer","getEnhancer","compose","applyMiddleware"],"mappings":";;;;;;AAGA,IAAMA,wBAAuB,SAAvBA,qBAAuB,CAACC,MAAD,EAASC,GAAT,EAAiB;MACxC,CAACD,MAAL,EAAa,OAAOE,SAAP;MACTF,OAAOC,GAAP,CAAJ,EAAiB,OAAOD,OAAOC,GAAP,CAAP;SACVF,sBAAqBC,OAAOG,MAA5B,EAAoCF,GAApC,CAAP;CAHF;;AAMA,IAAMG,uBAAsB,SAAtBA,oBAAsB,CAACJ,MAAD,EAASC,GAAT,EAAcI,KAAd,EAAwB;MAC9C,CAACL,MAAL,EAAa,OAAO,KAAP;MACTA,OAAOC,GAAP,MAAgBI,KAApB,EAA2B,OAAO,IAAP;SACpBD,qBAAoBJ,OAAOG,MAA3B,EAAmCF,GAAnC,EAAwCI,KAAxC,CAAP;CAHF;;AAMA,IAAMC,eAAe,SAAfA,YAAe;MAAGC,OAAH,QAAGA,OAAH;MAAYC,UAAZ,QAAYA,UAAZ;MAAwBC,QAAxB,QAAwBA,QAAxB;SAAuCF,WAAWE,QAAX,IAAuBD,UAA9D;CAArB;;AAEA,2BAAe,UAACE,MAAD,EAASC,QAAT,EAAsB;cAEjCL,aAAaI,MAAb,IAAuBA,MAAvB,GAAgCE,mCAAiB,EAAEC,QAAQH,MAAV,EAAjB,CAFC;MAC3BH,OAD2B,SAC3BA,OAD2B;MAClBC,UADkB,SAClBA,UADkB;MACNC,QADM,SACNA,QADM;;MAI7BK,SAAS,SAATA,MAAS,QAA4B;QAAzBC,QAAyB,SAAzBA,QAAyB;QAAfC,QAAe,SAAfA,QAAe;;QACnCC,MAAM,SAANA,GAAM;aAAMN,SAASK,UAAT,CAAN;KAAZ;QACME,YAAY,SAAZA,SAAY;aAAMD,MAAMjB,MAAZ;KAAlB;WACQ;;YAEA;eAAQe,SAASI,uBAAKC,IAAL,CAAT,CAAR;OAFA;eAGG;eAAQL,SAASM,0BAAQD,IAAR,CAAT,CAAR;OAHH;UAIF;eAAeL,SAASO,qBAAGC,WAAH,CAAT,CAAf;OAJE;cAKE;eAAMR,SAASS,0BAAT,CAAN;OALF;iBAMK;eAAMT,SAASU,6BAAT,CAAN;OANL;aAOC;eAAYV,SAASW,wBAAMC,QAAN,CAAT,CAAZ;OAPD;eAQG;eAAMZ,SAASa,2BAAT,CAAN;OARH;;cAAA;qBAWS;eAAOX,MAAMY,MAAN,IAAgBZ,MAAMY,MAAN,CAAa5B,GAAb,CAAvB;OAXT;qBAYS;eAAOgB,MAAMa,KAAN,IAAeb,MAAMa,KAAN,CAAY7B,GAAZ,CAAtB;OAZT;sBAaU;eAAOiB,eAAeA,YAAYjB,GAAZ,CAAtB;OAbV;4BAcgB;eAAOF,sBAAqBmB,WAArB,EAAkCjB,GAAlC,CAAP;OAdhB;eAeG;eAASgB,MAAMc,KAAN,KAAgBA,KAAzB;OAfH;2BAgBe,6BAAC9B,GAAD,EAAMI,KAAN;eAAgBD,qBAAoBc,WAApB,EAAiCjB,GAAjC,EAAsCI,KAAtC,CAAhB;;KAhBvB;GAHF;;SAuBO2B,UAAP,GAAoB;WAAMzB,OAAN;GAApB;SACO0B,WAAP,GAAqB;WAAMC,cAAQzB,QAAR,EAAkB0B,sBAAgB3B,UAAhB,CAAlB,CAAN;GAArB;;SAEOM,MAAP;CA9BF;;;;;;;;"}