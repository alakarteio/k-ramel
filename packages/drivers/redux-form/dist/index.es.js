import*as reduxform from"redux-form";import{reducer,startSubmit,isSubmitting,stopSubmit}from"redux-form";import _regeneratorRuntime from"babel-runtime/regenerator";import{get}from"lodash";var asyncToGenerator=function(r){return function(){var t=r.apply(this,arguments);return new Promise(function(r,e){return function n(o,i){try{var a=t[o](i),u=a.value}catch(r){return void e(r)}if(!a.done)return Promise.resolve(u).then(function(r){n("next",r)},function(r){n("throw",r)});r(u)}("next")})}},defineProperty=function(r,t,e){return t in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r},_extends=Object.assign||function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r},toConsumableArray=function(r){if(Array.isArray(r)){for(var t=0,e=Array(r.length);t<r.length;t++)e[t]=r[t];return e}return Array.from(r)},actionNames=["arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearSubmitErrors","clearFields","destroy","focus","initialize","registerField","reset","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopSubmit","stopAsyncValidation","submit","touch","unregisterField","untouch"],wrapAction=function(r,t,e){return function(){for(var n=arguments.length,o=Array(n),i=0;i<n;i++)o[i]=arguments[i];return r(reduxform[e].apply(reduxform,[t].concat(o)))}},actions=function(r){var t=r.dispatch;return function(r){return actionNames.reduce(function(e,n){return _extends(defineProperty({},n,wrapAction(t,r,n)),e)},{})}},_this=void 0,_asyncSubmit=function(r,t){var e,n=t.dispatch,o=t.getState;return e=asyncToGenerator(_regeneratorRuntime.mark(function t(e){for(var i=arguments.length,a=Array(i>1?i-1:0),u=1;u<i;u++)a[u-1]=arguments[u];var c;return _regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return n(startSubmit(r)),t.next=3,e.apply(void 0,toConsumableArray(a));case 3:return c=t.sent,isSubmitting(r)(o())&&n(stopSubmit(r)),t.abrupt("return",c);case 6:case"end":return t.stop()}},t,_this)})),function(r){return e.apply(this,arguments)}},customActions=function(r){return function(t){return{asyncSubmit:function(e){for(var n=arguments.length,o=Array(n>1?n-1:0),i=1;i<n;i++)o[i-1]=arguments[i];return _asyncSubmit(t,r).apply(void 0,[e].concat(o))}}}},selectorNames=["getFormValues","getFormInitialValues","getFormSyncErrors","getFormMeta","getFormAsyncErrors","getFormSyncWarnings","getFormSubmitErrors","getFormError","isDirty","isPristine","isValid","isInvalid","isSubmitting","hasSubmitSucceeded","hasSubmitFailed"],selectorNamesWithoutParameter=["getFormNames"],wrapSelector=function(r,t,e,n){return function(){return reduxform[n](e,t)(r())}},selectors=function(r){return function(t){var e=t.getState;return function(t){return _extends({},selectorNames.reduce(function(n,o){return _extends(defineProperty({},o,wrapSelector(e,r,t,o)),n)},{}),selectorNamesWithoutParameter.reduce(function(t,n){return _extends(defineProperty({},n,function(){return reduxform[n](r)(e())}),t)},{}))}}},reduxForm=function(){var r=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).path,t=void 0===r?"form":r;return{getDriver:function(r){return function(e){return _extends({},actions(r)(e),selectors(function(r){return get(r,t)})(r)(e),customActions(r)(e))}},getReducer:function(){return{path:t,reducer:reducer}}}};export default reduxForm;
