{"version":3,"file":"index.umd.js","sources":["../src/getWrappedDisplayName.js","../src/inject.jsx","../src/listen.jsx","../src/provider.jsx"],"sourcesContent":["export default Component => (\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n)\n","import React, { Component } from 'react'\nimport shallowEqual from 'fbjs/lib/shallowEqual'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nconst defaultObject = {}\nconst withoutFunctions = object => Object\n  .keys(object)\n  .reduce(\n    (acc, key) => {\n      const value = object[key]\n      if (typeof value === 'function') return acc\n      return { ...acc, [key]: value }\n    },\n    defaultObject,\n  )\n\nexport default injectFunction => WrappedComponent => class extends Component {\n  static displayName = `inject(${getWrappedDisplayName(WrappedComponent)}`\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.first = true\n\n    // attach store\n    const { store } = this.context\n\n    if (!store) {\n      const bold = 'font-weight: bolder; font-style: italic;'\n      // eslint-disable-next-line no-console\n      console.error(\n        `[k-ramel/react] Error in %cinject%c for the component %c${getWrappedDisplayName(WrappedComponent)}%c\\n` +\n        '\\t> The store needs to be provided by an ancestor of this component.\\n' +\n        '\\t> You can use %cprovider%c from %c@k-ramel/react%c or %cProvider%c from %creact-redux%c.\\n\\n' +\n        'Check the documentation for an example at https://github.com/alakarteio/k-ramel#connect-it-with-reactjs\\n',\n        bold, '', bold, '', bold, '', bold, '', bold, '', bold, '',\n      )\n      return\n    }\n    this.store = store\n\n    // run in once\n    this.state = {\n      ...this.state,\n      injectedProps: this.getInjectedProps() || {},\n    }\n\n    // subscribe\n    this.unsubscribe = store.subscribe(() => {\n      const injectedProps = this.getInjectedProps()\n      if (this.setState && injectedProps) {\n        this.setState(state => ({ ...state, injectedProps }))\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.first) return true\n\n    return !(\n      shallowEqual(this.props, nextProps)\n      && shallowEqual(\n        withoutFunctions(nextState.injectedProps),\n        withoutFunctions(this.state.injectedProps),\n      )\n    )\n  }\n\n  componentWillUnmount() {\n    this.store = undefined\n    this.unsubscribe()\n  }\n\n  getDerivedStateFromProps(nextProps, prevState) {\n    const injectedProps = this.getInjectedProps(nextProps)\n    if (!injectedProps) return null\n\n    return { ...prevState, injectedProps }\n  }\n\n  getInjectedProps = (nextProps) => {\n    if (!this.store) return undefined\n\n    return (\n      injectFunction\n        ? injectFunction(this.store, nextProps || this.props, this.store.drivers) || defaultObject\n        : defaultObject\n    )\n  }\n\n  render() {\n    if (this.first) this.first = false\n\n    return (\n      <WrappedComponent\n        /* this is parent props */\n        {...this.props}\n        /* this is injected props from hoc */\n        {...this.state.injectedProps}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nconst defaultListeners = []\n\nconst toActionFactory = (name) => {\n  const suffix = `${name ? '>' : ''}${name || ''}`\n  return type => `@@krml/LISTENERS>${type}${suffix}`\n}\n\nexport default (listeners = defaultListeners, name) => (WrappedComponent) => {\n  const toAction = toActionFactory(name)\n\n  return class extends Component {\n    static displayName = `listen(${getWrappedDisplayName(WrappedComponent)}`\n\n    static contextTypes = {\n      store: () => null, // this is to avoid importing prop-types\n    }\n\n    componentWillMount() {\n      const { store } = this.context\n\n      store.listeners.add(listeners)\n      store.dispatch(toAction('ADDED'))\n    }\n\n    componentWillUnmount() {\n      const { store } = this.context\n\n      store.dispatch(toAction('REMOVING'))\n      store.listeners.remove(listeners)\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />\n    }\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nimport React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nexport default store => WrappedComponent => class extends Component {\n  static displayName = `provider(${getWrappedDisplayName(WrappedComponent)})`\n\n  static childContextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  getChildContext() {\n    return { store }\n  }\n\n  componentWillMount() {\n    store.dispatch('@@krml/INIT')\n  }\n\n  render() {\n    return <WrappedComponent {...this.props} />\n  }\n}\n"],"names":["Component","displayName","name","constructor","defaultObject","withoutFunctions","Object","keys","object","reduce","acc","key","value","defaultListeners","props","context","getInjectedProps","nextProps","_this","store","injectFunction","drivers","first","bold","error","getWrappedDisplayName","WrappedComponent","state","unsubscribe","subscribe","injectedProps","setState","nextState","this","shallowEqual","undefined","prevState","React","contextTypes","dispatch","childContextTypes","listeners","toAction","suffix","type","toActionFactory","add","remove"],"mappings":"maACEA,EAAUC,aACPD,EAAUE,MACTF,EAAUG,aAAeH,EAAUG,YAAYD,MAChD,m+BCACE,KACAC,EAAmB,mBAAUC,OAChCC,KAAKC,GACLC,OACC,SAACC,EAAKC,OACEC,EAAQJ,EAAOG,SACA,mBAAVC,EAA6BF,OAC5BA,4HAAMC,EAAMC,KAE1BR,ICVES,iCDa2B,sDAOnBC,EAAOC,4EACXD,EAAOC,MA2DfC,iBAAmB,SAACC,MACbC,EAAKC,aAGRC,GACIA,EAAeF,EAAKC,MAAOF,GAAaC,EAAKJ,MAAOI,EAAKC,MAAME,UAC/DjB,KAhEDkB,OAAQ,MAGLH,EAAUD,EAAKH,QAAfI,UAEHA,EAAO,KACJI,EAAO,0DAELC,MACN,2DAA2DC,EAAsBC,uRAIjFH,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,kBAIvDJ,MAAQA,IAGRQ,WACAT,EAAKS,qBACOT,EAAKF,yBAItBE,EAAKU,YAAcT,EAAMU,UAAU,eAC3BC,EAAgBZ,EAAKF,mBACvBE,EAAKa,UAAYD,KACdC,SAAS,wBAAeJ,GAAOG,uFAKpBb,EAAWe,WAC3BC,KAAKX,SAGPY,EAAaD,KAAKnB,MAAOG,IACtBiB,EACD7B,EAAiB2B,EAAUF,eAC3BzB,EAAiB4B,KAAKN,MAAMG,qEAM3BX,WAAQgB,OACRP,+DAGkBX,EAAWmB,OAC5BN,EAAgBG,KAAKjB,iBAAiBC,UACvCa,OAEOM,GAAWN,kBAFI,6CAgBvBG,KAAKX,QAAOW,KAAKX,OAAQ,GAG3Be,gBAACX,OAEKO,KAAKnB,MAELmB,KAAKN,MAAMG,uBArF4C9B,eAC1DC,sBAAwBwB,EAAsBC,KAE9CY,oBACE,kBAAM,yCEhBO,iNAQXnB,wDAIHoB,SAAS,uDAIRF,gBAACX,EAAqBO,KAAKnB,cAhBoBd,eACjDC,wBAA0BwB,EAAsBC,SAEhDc,yBACE,kBAAM,mCDEDC,yDAAY5B,EAAkBX,sBAAS,SAACwB,WAChDgB,EANgB,SAACxC,OACjByC,GAAYzC,EAAO,IAAM,KAAKA,GAAQ,WACrC,sCAA4B0C,EAAOD,GAIzBE,CAAgB3C,gMAUrBiB,EAAUc,KAAKlB,QAAfI,QAEFsB,UAAUK,IAAIL,KACdF,SAASG,EAAS,6DAIhBvB,EAAUc,KAAKlB,QAAfI,QAEFoB,SAASG,EAAS,eAClBD,UAAUM,OAAON,2CAIhBJ,gBAACX,EAAqBO,KAAKnB,cAtBjBd,eACZC,sBAAwBwB,EAAsBC,KAE9CY,oBACE,kBAAM"}