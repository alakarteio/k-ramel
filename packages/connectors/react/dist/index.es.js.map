{"version":3,"file":"index.es.js","sources":["../src/getWrappedDisplayName.js","../src/inject.jsx","../src/provider.jsx","../src/listen.jsx"],"sourcesContent":["export default Component => (\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n)\n","import React, { Component } from 'react'\nimport shallowEqual from 'fbjs/lib/shallowEqual'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nconst defaultObject = {}\nconst withoutFunctions = object => Object\n  .keys(object)\n  .reduce(\n    (acc, key) => {\n      const value = object[key]\n      if (typeof value === 'function') return acc\n      return { ...acc, [key]: value }\n    },\n    defaultObject,\n  )\n\nexport default injectFunction => WrappedComponent => class extends Component {\n  static displayName = `inject(${getWrappedDisplayName(WrappedComponent)}`\n\n  static contextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.first = true\n\n    // attach store\n    const { store } = this.context\n\n    if (!store) {\n      const bold = 'font-weight: bolder; font-style: italic;'\n      // eslint-disable-next-line no-console\n      console.error(\n        `[k-ramel/react] Error in %cinject%c for the component %c${getWrappedDisplayName(WrappedComponent)}%c\\n` +\n        '\\t> The store needs to be provided by an ancestor of this component.\\n' +\n        '\\t> You can use %cprovider%c from %c@k-ramel/react%c or %cProvider%c from %creact-redux%c.\\n\\n' +\n        'Check the documentation for an example at https://github.com/alakarteio/k-ramel#connect-it-with-reactjs\\n',\n        bold, '', bold, '', bold, '', bold, '', bold, '', bold, '',\n      )\n      return\n    }\n    this.store = store\n\n    // run in once\n    this.state = {\n      ...this.state,\n      injectedProps: this.getInjectedProps() || {},\n    }\n\n    // subscribe\n    this.unsubscribe = store.subscribe(() => {\n      const injectedProps = this.getInjectedProps()\n      if (this.setState && injectedProps) {\n        this.setState(state => ({ ...state, injectedProps }))\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.first) return true\n\n    return !(\n      shallowEqual(this.props, nextProps)\n      && shallowEqual(\n        withoutFunctions(nextState.injectedProps),\n        withoutFunctions(this.state.injectedProps),\n      )\n    )\n  }\n\n  componentWillUnmount() {\n    this.store = undefined\n    this.unsubscribe()\n  }\n\n  getDerivedStateFromProps(nextProps, prevState) {\n    const injectedProps = this.getInjectedProps(nextProps)\n    if (!injectedProps) return null\n\n    return { ...prevState, injectedProps }\n  }\n\n  getInjectedProps = (nextProps) => {\n    if (!this.store) return undefined\n\n    return (\n      injectFunction\n        ? injectFunction(this.store, nextProps || this.props, this.store.drivers) || defaultObject\n        : defaultObject\n    )\n  }\n\n  render() {\n    if (this.first) this.first = false\n\n    return (\n      <WrappedComponent\n        /* this is parent props */\n        {...this.props}\n        /* this is injected props from hoc */\n        {...this.state.injectedProps}\n      />\n    )\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nimport React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nexport default store => WrappedComponent => class extends Component {\n  static displayName = `provider(${getWrappedDisplayName(WrappedComponent)})`\n\n  static childContextTypes = {\n    store: () => null, // this is to avoid importing prop-types\n  }\n\n  getChildContext() {\n    return { store }\n  }\n\n  componentWillMount() {\n    store.dispatch('@@krml/INIT')\n  }\n\n  render() {\n    return <WrappedComponent {...this.props} />\n  }\n}\n","import React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nconst defaultListeners = []\n\nconst toActionFactory = (name) => {\n  const suffix = `${name ? '>' : ''}${name || ''}`\n  return type => `@@krml/LISTENERS>${type}${suffix}`\n}\n\nexport default (listeners = defaultListeners, name) => (WrappedComponent) => {\n  const toAction = toActionFactory(name)\n\n  return class extends Component {\n    static displayName = `listen(${getWrappedDisplayName(WrappedComponent)}`\n\n    static contextTypes = {\n      store: () => null, // this is to avoid importing prop-types\n    }\n\n    componentWillMount() {\n      const { store } = this.context\n\n      store.listeners.add(listeners)\n      store.dispatch(toAction('ADDED'))\n    }\n\n    componentWillUnmount() {\n      const { store } = this.context\n\n      store.dispatch(toAction('REMOVING'))\n      store.listeners.remove(listeners)\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />\n    }\n  }\n}\n"],"names":["Component","displayName","name","constructor","defaultObject","withoutFunctions","Object","keys","object","reduce","acc","key","value","props","context","getInjectedProps","nextProps","_this","store","injectFunction","drivers","first","bold","error","getWrappedDisplayName","WrappedComponent","state","unsubscribe","subscribe","injectedProps","setState","nextState","this","shallowEqual","undefined","prevState","React","contextTypes","dispatch","childContextTypes","defaultListeners","toActionFactory","suffix","type","listeners","toAction","add","remove"],"mappings":"oFAAA,6CACEA,EAAUC,aACPD,EAAUE,MACTF,EAAUG,aAAeH,EAAUG,YAAYD,MAChD,sqCCACE,iBACAC,iBAAmB,mBAAUC,OAChCC,KAAKC,GACLC,OACC,SAACC,EAAKC,OACEC,EAAQJ,EAAOG,SACA,mBAAVC,EAA6BF,cAC5BA,oBAAMC,EAAMC,KAE1BR,0CAG6B,sDAOnBS,EAAOC,iHACXD,EAAOC,MA2DfC,iBAAmB,SAACC,MACbC,EAAKC,aAGRC,GACIA,EAAeF,EAAKC,MAAOF,GAAaC,EAAKJ,MAAOI,EAAKC,MAAME,UAC/DhB,iBAhEDiB,OAAQ,MAGLH,EAAUD,EAAKH,QAAfI,UAEHA,EAAO,KACJI,EAAO,0DAELC,MACN,2DAA2DC,sBAAsBC,uRAIjFH,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,0CAIvDJ,MAAQA,IAGRQ,kBACAT,EAAKS,qBACOT,EAAKF,yBAItBE,EAAKU,YAAcT,EAAMU,UAAU,eAC3BC,EAAgBZ,EAAKF,mBACvBE,EAAKa,UAAYD,KACdC,SAAS,+BAAeJ,GAAOG,0CAtCuB7B,sEA2C3CgB,EAAWe,WAC3BC,KAAKX,SAGPY,aAAaD,KAAKnB,MAAOG,IACtBiB,aACD5B,iBAAiB0B,EAAUF,eAC3BxB,iBAAiB2B,KAAKN,MAAMG,qEAM3BX,WAAQgB,OACRP,+DAGkBX,EAAWmB,OAC5BN,EAAgBG,KAAKjB,iBAAiBC,UACvCa,cAEOM,GAAWN,kBAFI,6CAgBvBG,KAAKX,QAAOW,KAAKX,OAAQ,GAG3Be,oBAACX,cAEKO,KAAKnB,MAELmB,KAAKN,MAAMG,2BApFd5B,sBAAwBuB,sBAAsBC,KAE9CY,oBACE,kBAAM,uCChBO,sMAAkCrC,yEAQ7CkB,wDAIHoB,SAAS,uDAIRF,oBAACX,EAAqBO,KAAKnB,kBAf7BZ,wBAA0BuB,sBAAsBC,SAEhDc,yBACE,kBAAM,WCLXC,oBAEAC,gBAAkB,SAACvC,OACjBwC,GAAYxC,EAAO,IAAM,KAAKA,GAAQ,WACrC,sCAA4ByC,EAAOD,0BAG5BE,yDAAYJ,iBAAkBtC,sBAAS,SAACuB,WAChDoB,EAAWJ,gBAAgBvC,qLAEZF,yEAQTkB,EAAUc,KAAKlB,QAAfI,QAEF0B,UAAUE,IAAIF,KACdN,SAASO,EAAS,6DAIhB3B,EAAUc,KAAKlB,QAAfI,QAEFoB,SAASO,EAAS,eAClBD,UAAUG,OAAOH,2CAIhBR,oBAACX,EAAqBO,KAAKnB,kBArB7BZ,sBAAwBuB,sBAAsBC,KAE9CY,oBACE,kBAAM"}