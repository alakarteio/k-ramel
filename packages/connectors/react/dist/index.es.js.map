{"version":3,"file":"index.es.js","sources":["../src/getWrappedDisplayName.js","../src/createContext.js","../src/inject.jsx","../src/provider.jsx","../src/listen.jsx"],"sourcesContent":["export default Component => (\n  Component.displayName\n  || Component.name\n  || (Component.constructor && Component.constructor.name)\n  || 'Unknown'\n)\n","import { createContext } from 'react'\n\n// this is a singleton :(\nlet context\n\nexport default () => {\n  if (!context) context = createContext()\n  return context\n}\n","import React from 'react'\nimport shallowEqual from 'fbjs/lib/shallowEqual'\nimport getWrappedDisplayName from './getWrappedDisplayName'\nimport createContext from './createContext'\n\nconst defaultObject = {}\n\nconst withoutFunctions = object => Object\n  .keys(object)\n  .reduce(\n    (acc, key) => {\n      const value = object[key]\n      if (typeof value === 'function') return acc\n      return { ...acc, [key]: value }\n    },\n    defaultObject,\n  )\n\nconst getDerivedStateFromProps = injectFunction => (nextProps, prevState) => {\n  const { store } = prevState\n\n  // get props derivated from redux state\n  const injectedProps = injectFunction(store, nextProps.ownProps, store.drivers)\n\n  console.log('get derivated')\n  // no modifications ?\n  if (\n    shallowEqual(\n      withoutFunctions(prevState.injectedProps),\n      withoutFunctions(injectedProps),\n    )\n  ) return null\n\n  return { ...prevState, injectedProps, state: store.getState() }\n}\n\nconst wrapper = injectFunction => Component => class extends React.Component {\n  static getDerivedStateFromProps = getDerivedStateFromProps(injectFunction)\n\n  constructor(props) {\n    super(props)\n\n    const { store } = props\n\n    this.mounted = false\n    this.state = getDerivedStateFromProps(injectFunction)(\n      this.props,\n      {\n        // needed for first call (where we shallow compare old and new one)\n        injectedProps: defaultObject,\n        // store needed to call injectFunction\n        store,\n      },\n    )\n\n    console.log('constructor', Component.displayName)\n  }\n\n  componentDidMount() {\n    console.log('didmount', Component.displayName)\n\n    const { store } = this.props\n\n    this.unsubscribe = store.subscribe(() => {\n      console.log('subscribe', Component.displayName)\n      if (this.state.state !== store.getState()) {\n        const newState = getDerivedStateFromProps(injectFunction)(this.props, this.state)\n        console.log('get derivated - subscribe', Component.displayName)\n\n        if (newState !== null) {\n          if (!this.mounted) this.state = newState\n          else this.setState(newState)\n        }\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    console.log('unmount')\n    this.unsubscribe()\n  }\n\n  render() {\n    const { ownProps, injectedProps } = this.state\n\n    this.mounted = true\n\n    return (\n      <Component\n        {...ownProps}\n        {...injectedProps}\n      />\n    )\n  }\n}\n\nexport default (injectFunction) => {\n  const { Consumer } = createContext()\n  const withInjectFunction = wrapper(injectFunction)\n\n  return (Component) => {\n    const WrappedComponent = withInjectFunction(Component)\n\n    const WithConsumer = props => (\n      <Consumer>\n        {(store) => {\n          console.log('new store from context', WithConsumer.displayName)\n          return <WrappedComponent ownProps={props} store={store} />\n        }}\n      </Consumer>\n    )\n\n    WithConsumer.displayName = `inject(${getWrappedDisplayName(Component)}`\n\n    console.log('hoc', WithConsumer.displayName)\n\n    return WithConsumer\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nimport React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\nimport createContext from './createContext'\n\nexport default (store) => {\n  const { Provider } = createContext()\n\n  return WrappedComponent => class extends Component {\n    static displayName = `provider(${getWrappedDisplayName(WrappedComponent)})`\n\n    componentWillMount() {\n      store.dispatch('@@krml/INIT')\n    }\n\n    render() {\n      return (\n        <Provider value={store}>\n          <WrappedComponent {...this.props} />\n        </Provider>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport getWrappedDisplayName from './getWrappedDisplayName'\n\nconst defaultListeners = []\n\nconst toActionFactory = (name) => {\n  const suffix = `${name ? '>' : ''}${name || ''}`\n  return type => `@@krml/LISTENERS>${type}${suffix}`\n}\n\nexport default (listeners = defaultListeners, name) => (WrappedComponent) => {\n  const toAction = toActionFactory(name)\n\n  return class extends Component {\n    static displayName = `listen(${getWrappedDisplayName(WrappedComponent)}`\n\n    static contextTypes = {\n      store: () => null, // this is to avoid importing prop-types\n    }\n\n    componentWillMount() {\n      const { store } = this.context\n\n      store.listeners.add(listeners)\n      store.dispatch(toAction('ADDED'))\n    }\n\n    componentWillUnmount() {\n      const { store } = this.context\n\n      store.dispatch(toAction('REMOVING'))\n      store.listeners.remove(listeners)\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />\n    }\n  }\n}\n"],"names":["Component","displayName","name","constructor","context","createContext","defaultObject","withoutFunctions","Object","keys","object","reduce","acc","key","value","getDerivedStateFromProps","nextProps","prevState","store","injectedProps","injectFunction","ownProps","drivers","log","shallowEqual","state","getState","wrapper","props","mounted","unsubscribe","subscribe","newState","setState","React","Consumer","withInjectFunction","WrappedComponent","WithConsumer","getWrappedDisplayName","Provider","dispatch","defaultListeners","toActionFactory","suffix","type","listeners","toAction","add","remove","contextTypes"],"mappings":"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"}