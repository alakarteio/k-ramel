{"version":3,"file":"index.es.js","sources":["../src/createStore/reduxFactory.js","../src/createStore/toContext.js","../src/createStore/combine.js","../src/createStore/enhanceRedux/getDevTools.js","../src/createStore/enhanceRedux/listenFactory.js","../src/createStore/enhanceRedux/enhanceRedux.js","../src/createStore/createStore.js","../src/factoryHelpers.js","../src/reaction.js"],"sourcesContent":["import factory from 'k-redux-factory'\n\nexport default (root) => {\n  const subtree = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subtree(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const options = eval(fullpath) // eslint-disable-line no-eval\n    const { type } = options\n\n    // - leaf\n    if (type) { // k-redux-factory\n      return factory({\n        name,\n        path,\n        prefix: (path && path.replace(/\\./g, '_')) || '',\n        ...options,\n      })\n    } else if (typeof options === 'function') { // custom reducer\n      return options\n    }\n\n    // - branch\n    return Object\n      .keys(options)\n      .map(key => ({ [key]: subtree(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subtree()\n}\n","const withParams = ['get', 'getBy', 'hasKey']\n\n// TODO: review this list with k-redux-factory 6.0.0\nconst keysConfig = {\n  keyValue: [\n    // actions\n    ['set', 'add', 'update', 'addOrUpdate', 'replace', 'remove', 'orderBy', 'reset'],\n    // selectors\n    ['get', 'getBy', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'getState', 'hasKey'],\n  ],\n  simple: [\n    // actions\n    ['set', 'update', 'reset'],\n    // selectors\n    ['get', 'isInitialized'],\n  ],\n}\nkeysConfig.simpleObject = keysConfig.simple\nkeysConfig['simple.object'] = keysConfig.simple\nkeysConfig['simple.array'] = keysConfig.simple\nkeysConfig['simple.bool'] = keysConfig.simple\nkeysConfig['simple.string'] = keysConfig.simple\n\nexport default (root, store) => {\n  const subcontext = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subcontext(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const reducer = eval(fullpath) // eslint-disable-line no-eval\n\n    // - leaf\n    if (reducer.krfType !== undefined) {\n      const keys = keysConfig[reducer.krfType]\n      const [actions, selectors] = keys\n\n      const actionsObject = actions\n        .map((action) => {\n          const legacyAction = reducer[action]\n\n          return {\n            [action]: (...args) => store.dispatch(legacyAction(...args)),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n      const selectorsObject = selectors\n        .map((selector) => {\n          const legacySelector = reducer[selector]\n\n          return {\n            [selector]: (...args) => {\n              if (withParams.includes(selector)) return legacySelector(...args)(store.getState())\n              return legacySelector(store.getState())\n            },\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n\n      return Object.assign(reducer, actionsObject, selectorsObject)\n    }\n\n    // - branch\n    return Object\n      .keys(reducer)\n      .map(key => ({ [key]: subcontext(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subcontext()\n}\n","import { combineReducers } from 'redux'\n\nexport default (root) => {\n  const subcombine = (current) => {\n    const reducers = Object\n      .keys(current)\n      .map((key) => {\n        const cur = current[key]\n        if (typeof cur === 'function') return ({ [key]: cur })\n        return ({ [key]: subcombine(cur) })\n      })\n      .reduce(\n        (acc, curr) => ({ ...acc, ...curr }),\n        {},\n      )\n\n    return combineReducers(reducers)\n  }\n\n  return subcombine(root)\n}\n","const getReduxDevToolsEnhancer = name => window.devToolsExtension({ name })\n\nexport default (options) => {\n  const { name, devtools } = options\n\n  // no devtool enable\n  if (!devtools || !window || !window.devToolsExtension) return undefined\n\n  // return enhancer with devtools\n  return getReduxDevToolsEnhancer(name)\n}\n","import { applyMiddleware } from 'redux'\n\nexport default (rootListeners = [], drivers, withDevTools) => {\n  // k-ramel store\n  let innerStore\n\n  // k-ramel listners\n  let innerListeners = [rootListeners]\n\n  return {\n    // this setter is needed since the middleware is pass to redux\n    // createStore, and then BEFORE, we have store instanciated\n    setStore: (store) => {\n      innerStore = store\n    },\n\n    // this is to add new listeners\n    addListeners: (listeners) => {\n      innerListeners = [...innerListeners, listeners]\n    },\n\n    // this is to remove listeners\n    removeListeners: (listeners) => {\n      innerListeners = innerListeners.filter(l => l !== listeners)\n    },\n\n    // redux middleware\n    enhancer: applyMiddleware(() => next => (action) => {\n      const innerAction = withDevTools ? (action.action || action) : action\n\n      // dispatch action\n      const res = next(action)\n\n      // trigger listeners\n      innerListeners\n        .forEach((listeners) => {\n          try {\n            listeners.forEach((listener) => {\n              listener(innerAction, innerStore, innerStore.drivers)\n            })\n          } catch (exception) {\n            innerStore.dispatch({\n              type: '@@krml/EXCEPTION',\n              payload: {\n                from: action,\n                exception,\n                message: exception.message,\n              },\n            })\n          }\n        })\n\n      // return action result\n      return res\n    }),\n  }\n}\n","import { compose } from 'redux'\nimport getDevTools from './getDevTools'\nimport listenFactory from './listenFactory'\n\n/* eslint-env browser */\nexport default (options) => {\n  const { listeners, drivers, enhancer } = options\n\n  // devtools\n  const devtools = getDevTools(options)\n\n  // add custom listeners extension\n  const listen = listenFactory(listeners, drivers, !!devtools)\n\n  const enhancers = [\n    enhancer,\n    devtools,\n    listen.enhancer,\n  ].filter(Boolean)\n\n  // add this middleware to enhancer\n  return { enhancer: compose(...enhancers), listen }\n}\n","import { createStore, compose } from 'redux'\nimport http from '@k-ramel/driver-http'\nimport reduxFactory from './reduxFactory'\nimport toContext from './toContext'\nimport combine from './combine'\nimport enhanceRedux from './enhanceRedux'\n\nconst defaultOptions = {\n  hideRedux: true,\n  enhancer: undefined,\n  init: {},\n  listeners: undefined,\n  devtools: true,\n  name: 'store',\n  drivers: {\n    http: http(),\n  },\n}\n\nexport default (definition, options = defaultOptions) => {\n  // options\n  const innerOptions = {\n    ...defaultOptions,\n    ...options,\n    drivers: {\n      ...defaultOptions.drivers,\n      ...options.drivers,\n    },\n  }\n  const { init, hideRedux, drivers } = innerOptions\n  const definitionWithDrivers = { ...definition }\n\n  // use drivers\n  const driversEnhancers = []\n  const driversInits = []\n  Object.values(drivers)\n    .forEach((driver) => {\n      // bind reducer to store definition\n      if (driver.getReducer) {\n        const { reducer, path } = driver.getReducer() // eslint-disable-line no-unused-vars\n        eval(`definitionWithDrivers${path.length > 0 ? '.' : ''}${path}=reducer`) // eslint-disable-line no-eval\n      }\n\n      // add enhancer\n      if (driver.getEnhancer) driversEnhancers.push(driver.getEnhancer())\n\n      // add init\n      if (driver.init) driversInits.push(driver.init)\n    })\n\n  // add all driver enhancers\n  if (innerOptions.enhancer) driversEnhancers.push(innerOptions.enhancer)\n  innerOptions.enhancer = compose(...driversEnhancers)\n\n  // this is reducer exports (action/selectors)\n  let reducerTree = reduxFactory(definitionWithDrivers)\n\n  // instanciate the listen middleware and prepare redux enhancers\n  const { enhancer, listen } = enhanceRedux(innerOptions)\n\n  // this is the redux store\n  const reduxStore = createStore(\n    combine(reducerTree),\n    init,\n    enhancer,\n  )\n\n  // convert to a contextualized version\n  if (hideRedux) {\n    reducerTree = toContext(reducerTree, reduxStore)\n  }\n\n  // store (our own)\n  const store = {\n    ...reducerTree,\n    ...reduxStore,\n    listeners: {\n      add: listen.addListeners,\n      remove: listen.removeListeners,\n    },\n  }\n\n  // store with driver\n  store.drivers = Object.keys(drivers)\n    .reduce(\n      (acc, driver) => ({ ...acc, [driver]: drivers[driver].getDriver(store) }),\n      {},\n    )\n\n  // custom dispatch\n  const reduxDispatch = store.dispatch\n  store.dispatch = (action, ...args) => {\n    if (typeof action === 'string') return reduxDispatch({ type: action })\n    return reduxDispatch(action, ...args)\n  }\n\n  // pass store to listen (after it has been created)\n  listen.setStore(store)\n\n  // init drivers\n  driversInits.forEach(driverInit => driverInit(store))\n\n  return store\n}\n","// TODO: documentation\nexport const types = {\n  array: params => ({ ...params, type: 'simple.array' }),\n  bool: params => ({ ...params, type: 'simple.bool' }),\n  string: params => ({ ...params, type: 'simple.string' }),\n  object: params => ({ ...params, type: 'simple.object' }),\n  keyValue: params => ({ ...params, type: 'keyValue' }),\n}\n\nexport const keyValue = (params) => {\n  console.warn('/k-ramel/ You are using a deprecated \"keyValue\" import. We recommend using `types` : types.object, types.array, types.bool, types.string or types.keyValue')\n  return { ...params, type: 'keyValue' }\n}\n\nexport const simpleObject = (params) => {\n  console.warn('/k-ramel/ You are using a deprecated \"simpleObject\" import. We recommend using `types` : types.object, types.array, types.bool, types.string or types.keyValue')\n\n  return { ...params, type: 'simple.object' }\n}\n","import { isRegExp, isString, isFunction } from 'lodash'\n\nconst isMatching = (action, store) => matcher => ( // test matching\n  // to a string\n  (\n    isString(matcher) &&\n    action.type === matcher\n  )\n  // to a function\n  || (\n    isFunction(matcher) &&\n    matcher(action, store)\n  )\n  // to a regexp\n  || (\n    isRegExp(matcher) &&\n    action.type.match(matcher)\n  )\n)\n\nexport const when = (...matchers) => callback => (action, store, drivers) => {\n  const match = matchers\n    .reduce((acc, curr) => acc && isMatching(action, store)(curr), true)\n\n  if (match) return callback(action, store, drivers)\n  return false\n}\n\nexport const reaction = fn => Object.assign(\n  fn,\n  { when: (...args) => when(...args)(fn) },\n)\n\nexport const reactions = fns => Object.keys(fns)\n  .reduce((acc, curr) => ({ ...acc, [curr]: reaction(fns[curr]) }), {})\n"],"names":["root","subtree","name","path","undefined","Object","keys","map","key","reduce","acc","next","nextPath","fullpath","options","eval","type","factory","replace","withParams","keysConfig","simpleObject","simple","store","subcontext","reducer","krfType","actions","selectors","actionsObject","action","legacyAction","dispatch","selectorsObject","selector","legacySelector","includes","getState","assign","subcombine","current","reducers","cur","curr","combineReducers","getReduxDevToolsEnhancer","window","devToolsExtension","devtools","rootListeners","withDevTools","innerStore","innerListeners","listeners","filter","l","applyMiddleware","innerAction","res","forEach","listener","drivers","exception","message","enhancer","getDevTools","listen","listenFactory","enhancers","Boolean","compose","defaultOptions","http","definition","innerOptions","init","hideRedux","definitionWithDrivers","driversEnhancers","driversInits","values","driver","getReducer","length","getEnhancer","push","reducerTree","reduxFactory","enhanceRedux","reduxStore","createStore","combine","toContext","addListeners","removeListeners","getDriver","reduxDispatch","args","setStore","driverInit","types","params","keyValue","warn","isMatching","matcher","isRegExp","match","when","matchers","callback","reaction","fn","reactions","fns"],"mappings":"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"}