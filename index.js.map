{"version":3,"file":"index.js","sources":["src/createStore/reduxFactory.js","src/createStore/toContext.js","src/createStore/combine.js","src/createStore/createStore.js","src/factoryHelpers.js"],"sourcesContent":["import factory from 'k-redux-factory'\n\nexport default (root) => {\n  const subtree = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subtree(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const options = eval(fullpath) // eslint-disable-line no-eval\n    const { type } = options\n\n    // - leaf\n    if (type) { // k-redux-factory\n      return factory({ name, path, ...options })\n    } else if (typeof options === 'function') { // custom reducer\n      return options\n    }\n\n    // - branch\n    return Object\n      .keys(options)\n      .map(key => ({ [key]: subtree(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subtree()\n}\n","const keysConfig = {\n  keyValue: [\n    // actions\n    ['set', 'add', 'update', 'addOrUpdate', 'replace', 'remove', 'orderBy', 'reset'],\n    // selectors\n    ['get', 'getBy', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'getState'],\n  ],\n  simpleObject: [\n    // actions\n    ['set', 'update', 'reset'],\n    // selectors\n    ['get', 'isInitialized'],\n  ],\n}\n\nexport default (root, store) => {\n  const subcontext = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subcontext(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const reducer = eval(fullpath) // eslint-disable-line no-eval\n\n    // - leaf\n    if (reducer.krfType !== undefined) {\n      const keys = keysConfig[reducer.krfType]\n      const [actions, selectors] = keys\n\n      const actionsObject = actions\n        .map((action) => {\n          const legacyAction = reducer[action]\n\n          return {\n            [action]: (...args) => store.dispatch(legacyAction(...args)),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n      const selectorsObject = selectors\n        .map((selector) => {\n          const legacySelector = reducer[selector]\n\n          return {\n            [selector]: (...args) => legacySelector(...args)(store.getState()),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n\n      return Object.assign(reducer, actionsObject, selectorsObject)\n    }\n\n    // - branch\n    return Object\n      .keys(reducer)\n      .map(key => ({ [key]: subcontext(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subcontext()\n}\n","import { combineReducers } from 'redux'\n\nexport default (root) => {\n  const subcombine = (current) => {\n    const reducers = Object\n      .keys(current)\n      .map((key) => {\n        const cur = current[key]\n        if (typeof cur === 'function') return ({ [key]: cur })\n        return ({ [key]: subcombine(cur) })\n      })\n      .reduce(\n        (acc, curr) => ({ ...acc, ...curr }),\n        {},\n      )\n\n    return combineReducers(reducers)\n  }\n\n  return subcombine(root)\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport reduxFactory from './reduxFactory'\nimport toContext from './toContext'\nimport combine from './combine'\n\nconst defaultOptions = {\n  hideRedux: true,\n  middlewares: [],\n  init: {},\n}\n\nexport default (definition, options = defaultOptions) => {\n  // options\n  const innerOptions = { ...defaultOptions, ...options }\n\n  // this is reducer exports (action/selectors)\n  let reducerTree = reduxFactory(definition)\n\n  // this is the redux store\n  const store = createStore(\n    combine(reducerTree),\n    innerOptions.init,\n    applyMiddleware(...innerOptions.middlewares),\n  )\n\n  // convert to a contextualized version\n  if (innerOptions.hideRedux) {\n    reducerTree = toContext(reducerTree, store)\n  }\n\n  // exports\n  return {\n    ...reducerTree,\n    ...store,\n    getStore: () => store,\n  }\n}\n","export const keyValue = params => ({ ...params, type: 'keyValue' })\nexport const simpleObject = params => ({ ...params, type: 'simpleObject' })\n"],"names":["root","subtree","name","path","undefined","Object","keys","map","key","reduce","acc","next","nextPath","fullpath","options","eval","type","factory","keysConfig","store","subcontext","reducer","krfType","actions","selectors","actionsObject","action","legacyAction","dispatch","selectorsObject","selector","legacySelector","getState","assign","subcombine","current","reducers","cur","curr","combineReducers","defaultOptions","definition","innerOptions","reducerTree","reduxFactory","createStore","combine","init","applyMiddleware","middlewares","hideRedux","toContext","keyValue","params","simpleObject"],"mappings":"ywCAEgBA,UACRC,QAAU,SAAVA,QAAWC,KAAMC,cAERC,IAATF,YACKG,OACJC,KAAKN,MACLO,IAAI,qCAAWC,EAAMP,QAAQO,EAAK,OAClCC,OACC,SAACC,EAAKC,sBAAeD,EAAQC,YAM7BC,UAAcT,KAAUA,SAAU,IAAKD,KACvCW,iBAAmBD,SACnBE,QAAUC,KAAKF,UACbG,KAASF,QAATE,YAGJA,KACKC,kBAAUf,UAAMC,WAASW,UACJ,mBAAZA,QACTA,QAIFT,OACJC,KAAKQ,SACLP,IAAI,qCAAWC,EAAMP,QAAQO,EAAKI,aAClCH,OACC,SAACC,EAAKC,sBAAeD,EAAQC,gBAK5BV,WCtCHiB,uBAGD,MAAO,MAAO,SAAU,cAAe,UAAW,SAAU,UAAW,UAEvE,MAAO,QAAS,UAAW,aAAc,YAAa,gBAAiB,4BAIvE,MAAO,SAAU,UAEjB,MAAO,sCAIIlB,KAAMmB,WACdC,WAAa,SAAbA,WAAclB,KAAMC,cAEXC,IAATF,YACKG,OACJC,KAAKN,MACLO,IAAI,qCAAWC,EAAMY,WAAWZ,EAAK,OACrCC,OACC,SAACC,EAAKC,sBAAeD,EAAQC,YAM7BC,UAAcT,KAAUA,SAAU,IAAKD,KACvCW,iBAAmBD,SACnBS,QAAUN,KAAKF,kBAGGT,IAApBiB,QAAQC,QAAuB,KAC3BhB,KAAOY,WAAWG,QAAQC,6BACHhB,QAAtBiB,iBAASC,mBAEVC,cAAgBF,QACnBhB,IAAI,SAACmB,OACEC,EAAeN,QAAQK,4BAG1BA,EAAS,kBAAaP,MAAMS,SAASD,+BAGzClB,OACC,SAACC,EAAKC,sBAAeD,EAAQC,QAG3BkB,gBAAkBL,UACrBjB,IAAI,SAACuB,OACEC,EAAiBV,QAAQS,4BAG5BA,EAAW,kBAAaC,yBAAAA,CAAwBZ,MAAMa,gBAG1DvB,OACC,SAACC,EAAKC,sBAAeD,EAAQC,eAI1BN,OAAO4B,OAAOZ,QAASI,cAAeI,wBAIxCxB,OACJC,KAAKe,SACLd,IAAI,qCAAWC,EAAMY,WAAWZ,EAAKI,aACrCH,OACC,SAACC,EAAKC,sBAAeD,EAAQC,gBAK5BS,+BC1EOpB,UACK,SAAbkC,EAAcC,OACZC,EAAW/B,OACdC,KAAK6B,GACL5B,IAAI,SAACC,OACE6B,EAAMF,EAAQ3B,4BACsBA,EAAvB,mBAAR6B,EAAqCA,EAC/BH,EAAWG,MAE7B5B,OACC,SAACC,EAAK4B,sBAAe5B,EAAQ4B,eAI1BC,sBAAgBH,GAGlBF,CAAWlC,ICddwC,2BACO,iDAKGC,OAAY3B,yDAAU0B,eAE9BE,cAAoBF,eAAmB1B,GAGzC6B,EAAcC,aAAaH,GAGzBtB,EAAQ0B,kBACZC,QAAQH,GACRD,EAAaK,KACbC,qDAAmBN,EAAaO,sBAI9BP,EAAaQ,cACDC,UAAUR,EAAaxB,gBAKlCwB,EACAxB,YACO,kBAAMA,MClCPiC,SAAW,+BAAgBC,GAAQrC,KAAM,cACzCsC,aAAe,+BAAgBD,GAAQrC,KAAM"}