{"version":3,"file":"index.js","sources":["src/createStore/reduxFactory.js","src/createStore/toContext.js","src/createStore/combine.js","src/createStore/enhanceRedux/addDevTools.js","src/createStore/enhanceRedux/listenFactory.js","src/createStore/enhanceRedux/enhanceRedux.js","src/createStore/drivers/http/http.js","src/createStore/drivers/index.js","src/createStore/createStore.js","src/factoryHelpers.js","src/reaction.js"],"sourcesContent":["import factory from 'k-redux-factory'\n\nexport default (root) => {\n  const subtree = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subtree(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const options = eval(fullpath) // eslint-disable-line no-eval\n    const { type } = options\n\n    // - leaf\n    if (type) { // k-redux-factory\n      return factory({\n        name,\n        path,\n        prefix: (path && path.replace(/\\./g, '_')) || '',\n        ...options,\n      })\n    } else if (typeof options === 'function') { // custom reducer\n      return options\n    }\n\n    // - branch\n    return Object\n      .keys(options)\n      .map(key => ({ [key]: subtree(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subtree()\n}\n","const withParams = ['get', 'getBy', 'hasKey']\n\nconst keysConfig = {\n  keyValue: [\n    // actions\n    ['set', 'add', 'update', 'addOrUpdate', 'replace', 'remove', 'orderBy', 'reset'],\n    // selectors\n    ['get', 'getBy', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'getState', 'hasKey'],\n  ],\n  simpleObject: [\n    // actions\n    ['set', 'update', 'reset'],\n    // selectors\n    ['get', 'isInitialized'],\n  ],\n}\n\nexport default (root, store) => {\n  const subcontext = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subcontext(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const reducer = eval(fullpath) // eslint-disable-line no-eval\n\n    // - leaf\n    if (reducer.krfType !== undefined) {\n      const keys = keysConfig[reducer.krfType]\n      const [actions, selectors] = keys\n\n      const actionsObject = actions\n        .map((action) => {\n          const legacyAction = reducer[action]\n\n          return {\n            [action]: (...args) => store.dispatch(legacyAction(...args)),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n      const selectorsObject = selectors\n        .map((selector) => {\n          const legacySelector = reducer[selector]\n\n          return {\n            [selector]: (...args) => {\n              if (withParams.includes(selector)) return legacySelector(...args)(store.getState())\n              return legacySelector(store.getState())\n            },\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n\n      return Object.assign(reducer, actionsObject, selectorsObject)\n    }\n\n    // - branch\n    return Object\n      .keys(reducer)\n      .map(key => ({ [key]: subcontext(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subcontext()\n}\n","import { combineReducers } from 'redux'\n\nexport default (root) => {\n  const subcombine = (current) => {\n    const reducers = Object\n      .keys(current)\n      .map((key) => {\n        const cur = current[key]\n        if (typeof cur === 'function') return ({ [key]: cur })\n        return ({ [key]: subcombine(cur) })\n      })\n      .reduce(\n        (acc, curr) => ({ ...acc, ...curr }),\n        {},\n      )\n\n    return combineReducers(reducers)\n  }\n\n  return subcombine(root)\n}\n","import { compose } from 'redux'\n\nconst getReduxDevToolsEnhancer = name => window.devToolsExtension({ name })\n\nexport default (options) => {\n  const { name, devtools, enhancer } = options\n\n  // no devtool enable\n  if (!devtools || !window || !window.devToolsExtension) return enhancer\n\n  // return enhancer with devtools\n  const reduxDevtoolsEnhancer = getReduxDevToolsEnhancer(name)\n  if (enhancer) return compose(enhancer, reduxDevtoolsEnhancer)\n  return reduxDevtoolsEnhancer\n}\n","export default (listeners, drivers) => {\n  // k-simple-state store\n  let innerStore\n\n  // k-simple-state drivers (enhanced with store)\n  let innerDrivers\n\n  return {\n    // this setter is needed since the middleware is pass to redux\n    // createStore, and then BEFORE, we have store instanciated\n    setStore: (store) => {\n      innerStore = store\n      innerDrivers = Object\n        .keys(drivers)\n        .reduce(\n          (acc, driver) => ({ ...acc, [driver]: drivers[driver](store) }),\n          {},\n        )\n    },\n\n    // redux middleware\n    middleware: () => next => (action) => {\n      // dispatch action\n      const res = next(action)\n\n      // trigger listeners\n      listeners.forEach((listener) => { listener(action, innerStore, innerDrivers) })\n\n      // return action result\n      return res\n    },\n  }\n}\n","import { compose, applyMiddleware } from 'redux'\nimport addDevTools from './addDevTools'\nimport listenFactory from './listenFactory'\n\n/* eslint-env browser */\nexport default (options) => {\n  const { listeners, drivers } = options\n  let { enhancer } = options\n\n  // add redux-devtools extension (if necessary)\n  enhancer = addDevTools(options)\n\n  // add custom listeners extension\n  if (listeners) {\n    const listen = listenFactory(listeners, drivers)\n\n    // add this middleware to enhancer\n    const middleware = applyMiddleware(listen.middleware)\n    if (enhancer) return { enhancer: compose(middleware, enhancer), listen }\n\n    return { enhancer: middleware, listen }\n  }\n\n  return { enhancer }\n}\n","const dispatchFactory = store => name => method =>\n  (event, payload, status) => store.dispatch({ type: `@@http/${name}>${method}>${event}`, payload, status })\n\nexport default store => name => async (url, options = {}, ...args) => {\n  // options\n  const { method = 'GET', headers = {} } = options\n  const type = headers['Content-Type'] || ''\n\n  // dispatcher\n  const dispatch = dispatchFactory(store)(name)(method)\n\n  // request\n  let data\n  let raw\n  dispatch('STARTED')\n  try {\n    raw = await (global || window).fetch(url, options, ...args)\n    data = raw\n\n    if (type.includes('json')) {\n      data = await raw.json()\n    }\n  } catch (ex) {\n    dispatch('FAILED', ex, (raw || {}).status)\n    return ex\n  }\n\n  const { status } = raw\n  if (status >= 400 || status < 200) {\n    dispatch('FAILED', data, status)\n  } else {\n    dispatch('ENDED', data, status)\n  }\n\n  return data\n}\n","import http from './http'\n\nexport default {\n  http,\n}\n","import { createStore } from 'redux'\nimport reduxFactory from './reduxFactory'\nimport toContext from './toContext'\nimport combine from './combine'\nimport enhanceRedux from './enhanceRedux'\nimport drivers from './drivers'\n\nconst defaultOptions = {\n  hideRedux: true,\n  enhancer: undefined,\n  init: {},\n  listeners: undefined,\n  devtools: true,\n  name: 'store',\n  drivers,\n}\n\nexport default (definition, options = defaultOptions) => {\n  // options\n  const innerOptions = {\n    ...defaultOptions,\n    ...options,\n    drivers: {\n      ...defaultOptions.drivers,\n      ...options.drivers,\n    },\n  }\n  const { init, hideRedux } = innerOptions\n\n  // this is reducer exports (action/selectors)\n  let reducerTree = reduxFactory(definition)\n\n  // instanciate the listen middleware and prepare redux enhancers\n  const { enhancer, listen } = enhanceRedux(innerOptions)\n\n  // this is the redux store\n  const reduxStore = createStore(\n    combine(reducerTree),\n    init,\n    enhancer,\n  )\n\n  // convert to a contextualized version\n  if (hideRedux) {\n    reducerTree = toContext(reducerTree, reduxStore)\n  }\n\n  // exported store (our own)\n  const store = {\n    ...reducerTree,\n    ...reduxStore,\n  }\n\n  // custom dispatch\n  const reduxDispatch = store.dispatch\n  store.dispatch = (action, ...args) => {\n    if (typeof action === 'string') return reduxDispatch({ type: action })\n    return reduxDispatch(action, ...args)\n  }\n\n  // pass store to listen (after it has been created)\n  if (listen) listen.setStore(store)\n\n  return store\n}\n","export const keyValue = params => ({ ...params, type: 'keyValue' })\nexport const simpleObject = params => ({ ...params, type: 'simpleObject' })\n","import { isRegExp, isString, isFunction } from 'lodash'\n\nconst isMatching = (action, store) => matcher => ( // test matching\n  // to a string\n  (\n    isString(matcher) &&\n    action.type === matcher\n  )\n  // to a function\n  || (\n    isFunction(matcher) &&\n    matcher(action, store)\n  )\n  // to a regexp\n  || (\n    isRegExp(matcher) &&\n    action.type.match(matcher)\n  )\n)\n\nexport const when = (...matchers) => callback => (action, store, drivers) => {\n  const match = matchers\n    .map(isMatching(action, store))\n    .reduce((acc, curr) => acc && curr, true)\n\n  if (match) return callback(action, store, drivers)\n  return false\n}\n\nexport const reaction = fn => Object.assign(\n  fn,\n  { when: (...args) => when(...args)(fn) },\n)\n\nexport const reactions = fns => Object.keys(fns)\n  .reduce((acc, curr) => ({ ...acc, [curr]: reaction(fns[curr]) }), {})\n"],"names":["root","subtree","name","path","undefined","Object","keys","map","key","reduce","acc","next","nextPath","fullpath","options","eval","type","factory","replace","withParams","keysConfig","store","subcontext","reducer","krfType","actions","selectors","actionsObject","action","legacyAction","dispatch","selectorsObject","selector","legacySelector","includes","getState","assign","subcombine","current","reducers","cur","curr","combineReducers","getReduxDevToolsEnhancer","window","devToolsExtension","devtools","enhancer","reduxDevtoolsEnhancer","compose","listeners","drivers","innerStore","innerDrivers","driver","res","forEach","listener","addDevTools","listen","listenFactory","middleware","applyMiddleware","dispatchFactory","event","payload","status","method","url","args","headers","global","fetch","raw","json","data","defaultOptions","definition","innerOptions","init","hideRedux","reducerTree","reduxFactory","enhanceRedux","reduxStore","createStore","combine","toContext","reduxDispatch","setStore","keyValue","params","simpleObject","isMatching","matcher","isRegExp","match","when","matchers","callback","reaction","fn","reactions","fns"],"mappings":"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"}