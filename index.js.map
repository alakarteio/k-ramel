{"version":3,"file":"index.js","sources":["src/createStore/reduxFactory.js","src/createStore/toContext.js","src/createStore/combine.js","src/createStore/createStore.js","src/factoryHelpers.js","src/index.js"],"sourcesContent":["import factory from 'k-redux-factory'\n\nexport default (root) => {\n  const subtree = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subtree(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const options = eval(fullpath) // eslint-disable-line no-eval\n    const { type } = options\n\n    // - leaf\n    if (type) { // k-redux-factory\n      return factory({ name, path, ...options })\n    } else if (typeof options === 'function') { // custom reducer\n      return options\n    }\n\n    // - branch\n    return Object\n      .keys(options)\n      .map(key => ({ [key]: subtree(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subtree()\n}\n","const keysConfig = {\n  keyValue: [\n    // actions\n    ['set', 'add', 'update', 'addOrUpdate', 'replace', 'remove', 'orderBy', 'reset'],\n    // selectors\n    ['get', 'getBy', 'getKeys', 'getAsArray', 'getLength', 'isInitialized', 'getState'],\n  ],\n  simpleObject: [\n    // actions\n    ['set', 'update', 'reset'],\n    // selectors\n    ['get', 'isInitialized'],\n  ],\n}\n\nexport default (root, store) => {\n  const subcontext = (name, path) => {\n    // first run\n    if (name === undefined) {\n      return Object\n        .keys(root)\n        .map(key => ({ [key]: subcontext(key, '') }))\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n    }\n\n    // other runs\n    const nextPath = `${path ? `${path}.` : ''}${name}`\n    const fullpath = `root.${nextPath}`\n    const reducer = eval(fullpath) // eslint-disable-line no-eval\n\n    // - leaf\n    if (reducer.krfType !== undefined) {\n      const keys = keysConfig[reducer.krfType]\n      const [actions, selectors] = keys\n\n      const actionsObject = actions\n        .map((action) => {\n          const legacyAction = reducer[action]\n\n          return {\n            [action]: (...args) => store.dispatch(legacyAction(...args)),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n      const selectorsObject = selectors\n        .map((selector) => {\n          const legacySelector = reducer[selector]\n\n          return {\n            [selector]: (...args) => legacySelector(...args)(store.getState()),\n          }\n        })\n        .reduce(\n          (acc, next) => ({ ...acc, ...next }),\n          {},\n        )\n\n      return Object.assign(reducer, actionsObject, selectorsObject)\n    }\n\n    // - branch\n    return Object\n      .keys(reducer)\n      .map(key => ({ [key]: subcontext(key, nextPath) }))\n      .reduce(\n        (acc, next) => ({ ...acc, ...next }),\n        {},\n      )\n  }\n\n  return subcontext()\n}\n","import { combineReducers } from 'redux'\n\nexport default (root) => {\n  const subcombine = (current) => {\n    const reducers = Object\n      .keys(current)\n      .map((key) => {\n        const cur = current[key]\n        if (typeof cur === 'function') return ({ [key]: cur })\n        return ({ [key]: subcombine(cur) })\n      })\n      .reduce(\n        (acc, curr) => ({ ...acc, ...curr }),\n        {},\n      )\n\n    return combineReducers(reducers)\n  }\n\n  return subcombine(root)\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport reduxFactory from './reduxFactory'\nimport toContext from './toContext'\nimport combine from './combine'\n\nconst defaultOptions = {\n  hideRedux: true,\n  middlewares: [],\n  init: {},\n}\n\nexport default (definition, options = defaultOptions) => {\n  // options\n  const innerOptions = { ...defaultOptions, ...options }\n\n  // this is reducer exports (action/selectors)\n  let reducerTree = reduxFactory(definition)\n\n  // this is the redux store\n  const store = createStore(\n    combine(reducerTree),\n    innerOptions.init,\n    applyMiddleware(...innerOptions.middlewares),\n  )\n\n  // convert to a contextualized version\n  if (innerOptions.hideRedux) {\n    reducerTree = toContext(reducerTree, store)\n  }\n\n  // exports\n  return {\n    ...reducerTree,\n    getStore: () => store,\n    getState: store.getState,\n    dispatch: store.dispatch,\n  }\n}\n","export const keyValue = params => ({ ...params, type: 'keyValue' })\nexport const simpleObject = params => ({ ...params, type: 'simpleObject' })\n","/* eslint-disable import/prefer-default-export */\nexport { default as createStore } from './createStore'\nexport * from './factoryHelpers'\n"],"names":["root","subtree","name","path","undefined","Object","keys","map","key","reduce","acc","next","nextPath","fullpath","options","eval","type","factory","keysConfig","store","subcontext","reducer","krfType","actions","selectors","actionsObject","action","legacyAction","dispatch","selectorsObject","selector","legacySelector","getState","assign","subcombine","current","reducers","cur","curr","combineReducers","defaultOptions","definition","innerOptions","reducerTree","reduxFactory","createStore","combine","init","applyMiddleware","middlewares","hideRedux","toContext","keyValue","params","simpleObject"],"mappings":"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"}